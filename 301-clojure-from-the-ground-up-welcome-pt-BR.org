---
english_title: Clojure From the Ground Up: Welcome
portuguese_title: Clojure a partir do zero: Bem vindo
url: https://aphyr.com/posts/301-clojure-from-the-ground-up
translator: Édipo L Féderle <edipofederle@gmail.com>
reviser: nedded
---

# Clojure a partir do zero: Bem vindo

Este guia tem como objetivo introduzir os recém-chegados e programadores
experientes a beleza da programação funcional, começando com os blocos de
construção mais simples de software. Você vai precisar de um computador,
proficiência básica com linha de comando, um editor de texto, e conexão com a
internet. Até o final desta série, você vai ter um comando aprofundado da
linguagem de programação Clojure. (necessita revisao)

# Para quem é este guia ?

Ciência, tecnologia, engenharia e matemática são campos profundamente
gratificantes, mas poucas mulheres os encaram como um plano de
carreira em [[http://en.wikipedia.org/wiki/STEM_fields][STEM]]. Além disso são desencorajados por uma cultura que repetidamente afirma
que as mulheres não têm a aptidão analítica para escrever software, que elas não
possuem qualidades o suficiente para ser cientistas de sucesso, isso não é legal para
perseguir uma paixão para a engenharia estrutural. As poucas com o talento,
encorajamento e persistência detonar em ciência e tecnologia são
desencorajadas pelo sexismo persistente na prática: o clube do velho menino de
posse, sendo preterido para promoções, o isolamento de seus colegas, e flat-out
assault. Este cenário é uma merda. Eu quero ajudar a mudá-lo. (necessita
revisao)

Women Who Code, PyLadies, Black Girls Code, RailsBridge, Girls Who Code, Girl
Develop It, e Lambda Ladies são apenas alguns de muitos grupos fantásticos que
vem ajudando mulheres a entrar e proposerar em software. Eu sinceramente apoiar
estes esforços. (necessita revisao, e adicao dos links para os grupos
referenciados).

Além disso, eu quero ajudar no meu cantinho da programação funcional na
comunidade técnica e sistemas distribuídos por-fazer dos recursos educacionais
de alta qualidade disponíveis gratuitamente. A série Jepsen tem sido, em parte,
um esforço para compartilhar o meu entusiasmo em sistemas distribuídos com
iniciantes de todas as faixas, mas especialmente para as mulheres, pessoas LGBT,
e pessoas de cor. (necessita revisao e adicao de links referenciados. P.S
"people of color?" hã?)

Como autores técnicos, nós muitas vezes assumimos que nossos leitores são brancos,
que os nossos leitores heterosexual, que nossos leitores são tradicionalmente
masculinos. Este é o padrão invisível na cultura dos Estados Unidos, e é
especialmente verdadeiro em tecnologia. As pessoas continuam a assumir com base
no meu software e escrita que eu sou hetero, porque bem hey, é uma suposição
razoável estatisticamente falando. (necessita revisao)

Mas eu não sou hetero. Sou chamado viado, filho da puta, e pecador. As pessoas
dizem que vão orar por mim. Quando eu ando de mãos dadas com meu namorado,
pessoas baixam suas janelas do carro e olham fixamente. Eles ameaçam
me bater ou me matar. Todos os dias eu estou ciente de que eu sou a única pessoa
gay algumas pessoas sabem, e que eu possa mostrar que nem todos os gays são
afeminados, ou hipermasculina, ou tolos, ou obcecado com a imagem. Que você pode
ser uma manicure ou um matemático ou ambos. Ser diferente, sendo um estranho em
sua cultura, vem com todos os tipos de desafios. Eu não posso falar com a
experiência de todos, mas eu posso dar um bom palpite. (necessita reviso)

Ao mesmo tempo, na comunidade técnica que eu encontrei calor avassalador e
apoio, de pessoas de todas as faixas. Meus colegas ficam em pé para mim todos os dias,
e eu sou muito grato, especialmente vocês, **dudes-for** entender um pouco de
como é ser diferente. Eu quero estender esse mesmo entendimento, essa mesma
empatia com as pessoas diferentes de mim. Além disso, quero tranquilizar todos
que, embora possam se sentir diferentes, eles têm um lugar nesta
comunidade. (necessita revisao)

Então, antes de começar, quero reforçar que você pode programar, que você pode
fazer matemática, que você pode projetar as suspensões de automóveis e sistemas
de extinção de incêndios e software de controle de naves espaciais e bancos de
dados distribuídos, independentemente do que seus colegas de classe e meios de
comunicação e até mesmo colegas engenheiros pensam. Você não tem que ser
branco, você não tem que ser em linha reta, você não tem que ser um homem. Você
pode crescer sem nunca ter tocado em um computador e ainda se tornar um
programador habilidoso. Sim, é mais difícil e, sim, as pessoas vão te dar merda,
mas isso não é culpa sua e não tem nada a ver com sua capacidade ou seu direito
de fazer o que você ama. Tudo o que é preciso para ser um bom engenheiro,
cientista ou matemático é a sua curiosidade, a sua paixão, o material didático
correto, e horas práticando tudo isso. (necessita revisao)

Não há nada neste guia que é apenas para avós lésbicas ou apenas para mestiços
filhos; cara, você é bem-vindo aqui também. Não há nada de bobos. Nós vamos ir
tão fundo nas idéias de programação como eu sei como ir, e nós vamos fazê-lo com
todos a bordo.

Não importa quem você é ou o que as pessoas pensam que você é, este guia é para você.

# Por Clojure?

Este livro é sobre como progrmar. Nós vamos estar aprendendo em Clojure, que é
um dialeto moderno de uma família muito antiga de linguagens de computador,
chamada Lisp. Você vai descobrir que muitas das idéias deste livro são
facilmente traduzidas  para outras linguagens; embora possam serem expresas de maneiras
diferentes. (necessita revisao)

Vamos explorar a natureza da sintaxe, metalinguagens, valores, referências,
mutação, fluxo de controle, e simultaneidade. Muitas linguagens deixam essas idéias
implícitas na construção da linguagem, ou nem tem um conceito de metalinguagens
ou simultaneidade. Clojure faz essas ideias explícitas,
construções de linguagem de primeira classe. (necessita revisao)

Ao mesmo tempo, nós vamos  adiar ou omitir qualquer discussão séria
sobre análise de tipagem estática, hardware e desempenho. Isso não quer dizer que
essas idéias não são importantes; só que eles não se encaixam bem dentro deste
arco narrativo particular. Para uma exploração profunda da teoria de tipos eu
recomendo um estudo de Haskell, e para uma melhor compreensão do hardware
subjacente, aprender C e assembly, sem dúvida, irá ajudar. (necessita revisao)

Em termos mais gerais, Clojure é uma linguagem **well-rounded ((bem projetada em vários aspectos?))**. Dispõe de um
amplo apoio de bibliotecas e roda em vários sistemas operacionais. O Desempenho de
Clojure não é ótimo, mas é ordens de magnitude mais rápido do que Ruby, Python,
ou Javascript. Ao contrário de algumas linguagens mais rápidos, Clojure enfatiza a
segurança em seu sistema de tipo e abordagem de paralelismo, o que torna mais
fácil escrever programas *multithread* corretos. Clojure é conciso, exigindo muito
pouco código para expressar operações complexas. Dispõe de um *REPL* e um sistema de
tipo dinâmico: ideal para iniciantes para experimentar, e bem adequado para
manipular estruturas de dados complexas. Uma biblioteca padrão projetada de
forma consisa e um conjunto completo de funcionalidade de set of
core datatypes rounds out the Clojure toolbox. (necessita revisao e traducao
ultima parte).

Finalmente, há alguns inconvenientes. Como uma linguagem compilada, Clojure é
muito mais lento para iniciar do que uma linguagem de script; isso  a torna
inadequada  para escrever pequenos scripts para uso interativo. Clojure também
não é bem adequada para operações numéricas de alto desempenho. Embora seja
possível, você tem que fazer e ficar atendo a várias outras coisas  para alcançar um desempenho
comparável com Java. Eu vou fazer o meu melhor para superar estes
constrangimentos e insuficiências enquanto prosseguimos através do
texto. (necessita revisao)

Com esse contexto fora do caminho, vamos começar com a instalação de Clojure!


# Configurando

Primeiro, você precisa Máquina Virtual Java ou JVM, e ferramentas associadas a ela, isso se chama JDK.
Esse é o software que *roda* os programa em Clojure. Se você estiver no Windows, instale [[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)][Oracle JDK 1.o8]]
Se você estiver no OS X ou no Linux, você talvez já tenha a JDK instalada. Em um terminal, tente:


#+BEGIN_SRC
which java
#+END_SRC


Se você ver algo como

#+BEGIN_SRC
/usr/bin/javac
#+END_SRC

Então você está pronto para seguir. Se você não ver nenhuma saída para o comando, installe a JDK para seu sistema operacional.

Quando você tiver a JDK, você vai precisar o [[http://leiningen.org/][Leinigen]], a ferramente de *build* para Clojure. Se você estiver em um
computador com Linux ou em OS X, as instruções abaixo devem funcionar para você. Se você estiver no Windows, veja a página do Leinigen e procure
o instalador. Caso você tiver problemas com a linha de comando, talvez você queira começar com [[http://blog.teamtreehouse.com/command-line-basics][primer on command line basics.]]

#+BEIGN_SRC
mkdir -p ~/bin
cd ~/bin
curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
chmod a+x lein
#+END_SRC

Leiningen automaticamente irá instalar da linguagem Clojure, procurando bibliotecas na internet, e construindo (**build**) e rodando seus programas. Nós
vamos criar um novo projeto Leiningem para brincar um pouco:

#+BEGIN_SRC
cd
lein new scratch
#+END_SRC

Os comando acimas irão criar um novo diretório no seu diretório pessoal, chamado =sratch=. Ao invés disso, se você ver =command not found=, significa
que o diretório =~/bin= não está registrado em seu terminal como um local para buscar por programas. Para concertar isso, adicione a seguinte linha:

-
export PATH="$PATH":~/bin
-

no arquivo =.bash_profile= em seu diretório pessoal, então execute o comando =source ~/.bash_profile=. Rodar novamente =lein new stratch= deve funcionar
agora.

Vamos entrar no diretório criado, e começar a usar Clojure.





